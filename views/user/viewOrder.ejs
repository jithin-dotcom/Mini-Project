<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    
    <style>
        body {
            background-color: #f9f9f9;
        }
        .card {
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .card-header {
            background: #007bff;
            color: white;
            border-radius: 12px 12px 0 0;
            font-size: 1.25rem;
        }
        .list-group-item {
            background-color: #fff;
        }
        .badge-status {
            font-size: 0.9rem;
            padding: 0.4em 0.7em;
        }
        /* .download-btn {
            position: absolute;
            top: 20px;
            right: 20px;
        } */
        .download-btn {
    padding: 10px 20px;
    font-size: 16px;
    text-align: center;
    border-radius: 8px; /* Rounded corners */
}

/* Responsive adjustments */
@media (max-width: 576px) {
    .download-btn {
        font-size: 14px; /* Slightly smaller font on small screens */
        padding: 8px 15px;
    }
}

    </style>
</head>
<body>
    <div class="container mt-5 position-relative" id="orders">
        <button id="downloadPDF" class="btn btn-primary download-btn w-md-auto">Download PDF</button>
        <div class="text-center mb-4" >
            <h2>Order Details</h2>
            <p class="text-muted">Detailed view of your order</p>
        </div>


         <div class="card-footer text-end">
                <a href="/userProfile" class="btn btn-outline-primary btn-sm" id="backToOrders">Back to Orders</a>
         </div>

        <div class="card">
            <div class="card-header">
                Order ID: <%= order.orderId %>
            </div>
            <div class="card-body" id="orderDetails">
                <h5 class="card-title">Order Summary</h5>
                <p><strong>Status:</strong> 
                    <span class="badge bg-warning text-dark badge-status"><%= order.status %></span>
                </p>
                <p> <strong>Payment Status:</strong>   <%= order.paymentStatus%></p>
                <p><strong>Invoice Date:</strong> <%= new Date(order.createdOn).toLocaleDateString() %></p>
                <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
                <!-- <p><strong>Coupon Applied:</strong> <%= order.couponApplied ? 'Yes' : 'No' %></p> -->

                <h5 class="mt-4">Pricing</h5>
                <ul class="list-group">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        Total Price:
                        <span>₹<%= order.totalPrice %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        Discount:
                        <span>₹<%= order.discount %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        Final Amount:
                        <span>₹<%= order.finalAmount %></span>
                    </li>
                </ul>

                <h5 class="mt-4">Ordered Items</h5>
                <table class="table table-bordered mt-3">
                    <thead>
                        <tr>
                            <th>Product Name</th>
                            <th>Size</th>
                            <th>Quantity</th>
                            <th>Price (₹)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% order.orderedItems.forEach(item => { %>
                            <tr>
                                <td><%= item.name %></td>
                                <td><%= item.size %></td>
                                <td><%= item.quantity %></td>
                                <td><%= item.price %></td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>

                <h5 class="mt-4">Delivery Address</h5>
                <p><%= address.name %></p>
                <p><%= address.city %></p>
                <p><%= address.landMark %></p>
                <p><%= address.state %></p>
                <p><%= address.pincode %></p>
                <p><%= address.phone %></p>
            </div>
            <!-- <div class="card-footer text-end">
                <a href="/userProfile" class="btn btn-outline-primary btn-sm" id="backToOrders">Back to Orders</a>
            </div> -->
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>


    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('downloadPDF').addEventListener('click', () => {
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();
                const rupeeSymbol = String.fromCharCode(8377); // ₹ symbol
    
                let yPos = 20; // Start position
    
                // Title
                doc.setFontSize(18);
                doc.text("Order Invoice", 80, yPos);
                doc.setLineWidth(.5); 
                const textWidth = doc.getTextWidth("Order Invoice"); // Get text width dynamically
                doc.line(80, yPos + 2, 80 + textWidth, yPos + 2);   // Draw line under tex
                yPos += 30;     //10
    
                // Order Details
                doc.setFontSize(12);
                doc.text(`Order ID: <%= order.orderId %>`, 10, yPos);
                doc.text(`Status: <%= order.status %>`, 10, yPos + 5);   //10
                doc.text(`Payment Status: <%= order.paymentStatus %>`, 10, yPos + 10); //20
                doc.text(`Invoice Date: <%= new Date(order.createdOn).toLocaleDateString() %>`, 10, yPos + 15); //30
                doc.text(`Payment Method: <%= order.paymentMethod %>`, 10, yPos + 20); //40
                // doc.text(`Coupon Applied: <%= order.couponApplied ? 'Yes' : 'No' %>`, 10, yPos + 25); //50
    
                yPos += 60;
    
                // Ordered Items Table
                doc.setFontSize(14);
                doc.text("Ordered Items", 10, yPos);
                yPos += 5; //10
                doc.setFontSize(12);
    
                const orderTableColumn = ["Product Name", "Size", "Quantity", "Price"];
                const orderTableRows = [];
    
                '<% order.orderedItems.forEach(item => { %>'
                    orderTableRows.push([
                        "<%= item.name %>",
                        "<%= item.size %>",
                        "<%= item.quantity %>",
                        "<%= item.price %>",
                    ]);
                '<% }) %>'
    
                doc.autoTable({
                    startY: yPos,
                    head: [orderTableColumn],
                    body: orderTableRows,
                    theme: 'grid',
                    margin: { top: 10 },
                });
    
                yPos = doc.lastAutoTable.finalY + 10;  //15
    
                // Pricing Details Table (Same Format as Order Items)
                doc.setFontSize(14);
                doc.text("Pricing Details", 10, yPos);
                yPos += 5;  //10
                doc.setFontSize(12);
    
                const pricingTableColumn = ["Description", "Amount"];
                const pricingTableRows = [
                    ["Total Price", "<%= order.totalPrice %>"],
                    ["Discount", "<%= order.discount %>"],
                    ["Final Amount", "<%= order.finalAmount %>"],
                ];
    
                doc.autoTable({
                    startY: yPos,
                    head: [pricingTableColumn],
                    body: pricingTableRows,
                    theme: 'grid',
                    margin: { top: 10 },
                    columnStyles: {
                        1: { halign: 'left' } // Align amounts to the right
                    }
                });
    
                yPos = doc.lastAutoTable.finalY + 30;   //15
    
                // Delivery Address
                doc.setFontSize(14);
                doc.text("Delivery Address", 10, yPos);
                yPos += 10;  //10
                doc.setFontSize(12);
    
                doc.text(`<%= address.name %>`, 10, yPos);
                doc.text(`<%= address.city %>, <%= address.state %>`, 10, yPos + 5); //10
                doc.text(`Landmark: <%= address.landMark %>`, 10, yPos + 10); //20
                doc.text(`Pincode: <%= address.pincode %>`, 10, yPos + 15); //30
                doc.text(`Phone: <%= address.phone %>`, 10, yPos + 20); //40
                yPos += 50;
    
                // Save PDF
                doc.save(`Invoice_<%= order.orderId %>.pdf`);
            });
        });
    </script>
    




    <!-- <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('downloadPDF').addEventListener('click', () => {
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();
    
                let yPos = 20; // Start position
    
                // Title
                doc.setFontSize(18);
                doc.text("Order Invoice", 80, yPos);
                yPos += 10;
    
                // Order Details
                doc.setFontSize(12);
                doc.text(`Order ID: <%= order.orderId %>`, 10, yPos);
                doc.text(`Status: <%= order.status %>`, 10, yPos + 10);
                doc.text(`Payment Status: <%= order.paymentStatus %>`, 10, yPos + 20);
                doc.text(`Invoice Date: <%= new Date(order.createdOn).toLocaleDateString() %>`, 10, yPos + 30);
                doc.text(`Payment Method: <%= order.paymentMethod %>`, 10, yPos + 40);
                doc.text(`Coupon Applied: <%= order.couponApplied ? 'Yes' : 'No' %>`, 10, yPos + 50);
    
                yPos += 60;
    
                // Pricing Details
                doc.setFontSize(14);
                doc.text("Pricing Details", 10, yPos);
                yPos += 10;
                doc.setFontSize(12);
    
                doc.text(`Total Price: ₹<%= order.totalPrice %>`, 10, yPos);
                doc.text(`Discount: ₹<%= order.discount %>`, 10, yPos + 10);
                doc.text(`Final Amount: ₹<%= order.finalAmount %>`, 10, yPos + 20);
                yPos += 40;
    
                // Ordered Items Table
                doc.setFontSize(14);
                doc.text("Ordered Items", 10, yPos);
                yPos += 10;
                doc.setFontSize(12);
    
                const tableColumn = ["Product Name", "Size", "Quantity", "Price (₹)"];
                const tableRows = [];
    
                '<% order.orderedItems.forEach(item => { %>'
                    tableRows.push([
                        "<%= item.name %>",
                        "<%= item.size %>",
                        "<%= item.quantity %>",
                        "₹<%= item.price %>",
                    ]);
               ' <% }) %>'
    
                doc.autoTable({
                    startY: yPos,
                    head: [tableColumn],
                    body: tableRows,
                    theme: 'grid',
                    margin: { top: 10 },
                });
    
                yPos = doc.lastAutoTable.finalY + 15;
    
                // Delivery Address
                doc.setFontSize(14);
                doc.text("Delivery Address", 10, yPos);
                yPos += 10;
                doc.setFontSize(12);
    
                doc.text(`<%= address.name %>`, 10, yPos);
                doc.text(`<%= address.city %>, <%= address.state %>`, 10, yPos + 10);
                doc.text(`Landmark: <%= address.landMark %>`, 10, yPos + 20);
                doc.text(`Pincode: <%= address.pincode %>`, 10, yPos + 30);
                doc.text(`Phone: <%= address.phone %>`, 10, yPos + 40);
                yPos += 50;
    
                // Save PDF
                doc.save(`Invoice_<%= order.orderId %>.pdf`);
            });
        });
    </script>
     -->





    <!-- <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('downloadPDF').addEventListener('click', () => {
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();
    
                // Temporarily hide the buttons (Download PDF and Back to Orders)
                const downloadButton = document.getElementById('downloadPDF');
                const backToOrdersButton = document.getElementById('backToOrders');
                downloadButton.style.display = 'none';
                backToOrdersButton.style.display = 'none';
    
                // Get the element
                const elementHTML = document.getElementById('orders');
    
                // Use html2canvas to get the element dimensions
                html2canvas(elementHTML).then((canvas) => {
                    const imgData = canvas.toDataURL('image/png');
                    const imgWidth = 150; // Image width in mm
                    const pageWidth = 210; // A4 width in mm
                    const pageHeight = 420; // A4 height in mm
                    const imgHeight = (canvas.height * imgWidth) / canvas.width;
                    let heightLeft = imgHeight;
    
                    // Calculate the x-coordinate to center the image
                    const xOffset = (pageWidth - imgWidth) / 2;
    
                    // Add the image to the PDF at the calculated position
                    doc.addImage(imgData, 'PNG', xOffset, 30, imgWidth, imgHeight);
                    heightLeft -= pageHeight;
    
                    // Add more pages if needed
                    while (heightLeft >= 0) {
                        const position = heightLeft - imgHeight;
                        doc.addPage();
                        doc.addImage(imgData, 'PNG', xOffset, position, imgWidth, imgHeight);
                        heightLeft -= pageHeight;
                    }
    
                    // Save the PDF
                    doc.save('order-details.pdf');
    
                    // Restore the buttons
                    downloadButton.style.display = 'inline-block';
                    backToOrdersButton.style.display = 'inline-block';
                });
            });
        });
    </script>
     -->

    
</body>
</html>
