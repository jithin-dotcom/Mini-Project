<%- include("../../views/partials/admin/header") %>
 <!-- SweetAlert2 CDN -->
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
 .col-md-3 {
   padding: 20px;
   border: 1px solid #ddd;
   border-radius: 10px;
   margin: 10px;
 }

 .error-message {
   color: red;
   margin-top: 5px;
 }

 .form-label {
   margin-bottom: 8px;
 }

 .form-control {
   width: 100%;
   padding: 8px;
   margin-bottom: 10px;
   border: 1px solid #ccc;
   border-radius: 5px;
   box-sizing: border-box;
 }

 .d-grid {
   margin-top: 20px;
 }

 .btn-primary {
   background-color: #007bff;
   color: #fff;
   border: 1px solid #007bff;
   border-radius: 5px;
   padding: 10px 20px;
   cursor: pointer;
 }

 .btn-primary:hover {
   background-color: #0056b3;
   border-color: #0056b3;
 }
 /* Pagination Container */
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
  margin-bottom: 20px;
}

/* Pagination Links */
.pagination a {
  text-decoration: none;
  padding: 10px 15px;
  margin: 0 5px;
  color: #007bff;
  font-size: 16px;
  border: 1px solid #ddd;
  border-radius: 5px;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Hover Effect */
.pagination a:hover {
  background-color: #007bff;
  color: white;
}

/* Active Page Link */
.pagination a.active {
  background-color: #007bff;
  color: white;
  font-weight: bold;
  border: 1px solid #007bff;
}

/* Disabled Links (for the first and last page) */
.pagination a:disabled {
  color: #ccc;
  cursor: not-allowed;
  border: 1px solid #ddd;
}

/* Optional: Adding a Previous/Next button */
.pagination a:first-child,
.pagination a:last-child {
  font-weight: bold;
}

 </style>
<section class="content-main">
 <div class="content-header">
   <div>
     <h2 class="content-title card-title">Coupons</h2>
   </div>
 </div>
 <div class="card">
   <div class="card-body">
     <div class="row">
       <div class="col-md-3">
         <form method="post" action="/admin/createCoupon">
           <body onload="setDefaultStartDate()"></body>
             <div class="mb-4">
               <label for="coupon-name" class="form-label">Coupon Name</label>
               <input
                 type="text"
                 id="coupon-name"
                 name="couponName"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-coupon-name" class="error-message"></div>
             </div>

             <div>
               <label for="startingDate" class="form-label">Start Date</label>
               <input
                 type="date"
                 name="startDate"
                 class="form-control"
                 required="true"
                 id="startingDate"
               />
               <div id="error-start-date" class="error-message"></div>
             </div>

             <div>
               <label for="expiringDate" class="form-label">End Date</label>
               <input
                 type="date"
                 name="endDate"
                 class="form-control"
                 id="expiringDate"
                 required="true"
               />
               <div id="error-end-date" class="error-message"></div>
             </div>

             <div>
               <label for="offer-price" class="form-label">Offer Price</label>
               <input
                 type="text"
                 name="offerPrice"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-offer-price" class="error-message"></div>
             </div>

             <div>
               <label for="minimum-price" class="form-label"
                 >Minimum Price</label
               >
               <input
                 type="text"
                 name="minimumPrice"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-minimum-price" class="error-message"></div>
             </div>

             <div class="d-grid">
               <button
                 class="btn btn-primary mt-20"
                 onclick="return validateForm(event)"
                 type="submit"
               >
                 Add Coupon
               </button>
             </div>
             <div id="err-msg" class="error-message"></div>
           </body>
         </form>
       </div>
       <div class="col-md-7 ml-105">
         <div class="table-responsive">
             <table class="table table-hover">
                 <thead>
                     <tr>
                         <th>Name</th>
                         <th>Created On</th>
                         <th>Expire On</th>
                         <th>Offer Price</th>
                         <th>Minimum Price</th>
                         <th>Status</th>
                         <th>Edit/Delete</th>
                     </tr>
                 </thead>
                 <tbody>

                    <%for(let i = 0; i < coupons.length; i++){%>
                    
                     <tr>
                         <td class="text-start"><%= coupons[i].name%></td>
                         <td class="text-start"><%= new Date(coupons[i].createdOn).toLocaleDateString('en-US')%></td>
                         <td class="text-start"><%= new Date(coupons[i].expireOn).toLocaleDateString('en-US')%></td>
                         <td class="text-start"><%= coupons[i].offerPrice%></td>
                         <td class="text-start"><%= coupons[i].minimumPrice%></td>
                         <td class="text-start"><%= coupons[i].isList%></td>
                         <td class="text-start">
                             <a href="/admin/editCoupon?id=<%=coupons[i]._id%>" class="btn btn-primary btn-sm" >Edit</a>

                             <a href="#" onclick="confirmDelete('<%=coupons[i]._id%>')" class="btn btn-danger btn-sm" style="height: 35px;width: 105px;">Delete</a>
                         </td>
                     </tr>
                     <%}%>
                 </tbody>
             </table>
         </div>
         <div class="pagination">
          <% if (currentPage > 1) { %>
            <a href="?page=<%= currentPage - 1 %>">Previous</a>
          <% } %>
        
          <% for (let i = 1; i <= totalPages; i++) { %>
            <a href="?page=<%= i %>" 
               class="<%= currentPage === i ? 'active' : '' %>">
               <%= i %>
            </a>
          <% } %>
        
          <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %>">Next</a>
          <% } %>
        </div>

     </div>
     <td class="text-start">
      <a href="" class="btn btn-primary btn-sm" style="width: 50px;height: 30px;padding: 5px;">reset</a>
    </td>
     </div>
   </div>
 </div>
</section>
<script>
  document.querySelector("form").addEventListener("submit", async function (event) {
  event.preventDefault(); // Prevent form submission

  const formData = new FormData(event.target);
  const data = {
    couponName: formData.get("couponName"),
    startDate: formData.get("startDate"),
    endDate: formData.get("endDate"),
    offerPrice: formData.get("offerPrice"),
    minimumPrice: formData.get("minimumPrice"),
  };

   
  // Validation for start date and end date
  const startDateObj = new Date(data.startDate);
  const endDateObj = new Date(data.endDate);

  if (startDateObj > endDateObj) {
    Swal.fire({
      icon: "error",
      title: "Invalid Dates",
      text: "Start Date must be less than or equal to End Date.",
    });
    return; // Stop execution if validation fails
  }




  let name = document.getElementsByName("couponName")[0].value;
   const nameRegex = /^[A-Za-z0-9]{1,50}$/;

   if (!nameRegex.test(name)) {
      Swal.fire({
        icon : "error",
        title : "Coupon Name Error",
        text : "Coupon name should only contain alphabets and numbers"
      })

    //  document.getElementById("error-coupon-name").innerHTML =
    //    "Coupon Name error";
     return false;
   }


     const offerPriceInput = document.getElementsByName("offerPrice")[0];
   const minimumPriceInput = document.getElementsByName("minimumPrice")[0];

   const offerPrice = offerPriceInput.value.trim() !== ""? parseInt(offerPriceInput.value): NaN;
   const minimumPrice = minimumPriceInput.value.trim() !== ""? parseInt(minimumPriceInput.value): NaN;

   if (isNaN(offerPrice) || isNaN(minimumPrice) || offerPrice >= minimumPrice) {
      Swal.fire({
        icon : "error",
        title : "Price Error",
        text : "Offer price must be Less than Minimum price"
      })

    //  document.getElementById("error-offer-price").innerHTML = "Offer Price must be greater than Minimum Price";
     return false;
   }

   if (isNaN(offerPrice) || isNaN(minimumPrice)) {
    Swal.fire({
      icon : "error",
      title : "Price Validation Error",
      text : "Please enter numeric values for Offer Price and Minimum Price"
    })
    //  document.getElementById("error-offer-price").innerHTML ="Please enter numeric values for Offer Price and Minimum Price";
     return false;
   }


  try {
    const response = await fetch("/admin/createCoupon", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(data),
    });

    if (response.status === 400) {
      const result = await response.json();
      Swal.fire({
        icon: "error",
        title: "Coupon Name Exists",
        text: result.message,
      });
    } else if (response.ok) {
      Swal.fire({
        icon: "success",
        title: "Coupon Created",
        text: "Coupon has been successfully created!",
      }).then(() => {
        window.location.href = "/admin/coupon"; // Redirect after success
      });
    }
  } catch (error) {
    console.error("Error creating coupon:", error);
    Swal.fire({
      icon: "error",
      title: "Server Error",
      text: "Something went wrong. Please try again later.",
    });
  }
});

</script>

<script>
//  function validateForm() {
//    document.querySelectorAll(".error-message").forEach((element) => (element.innerHTML = ""));
//    const sDate = document.getElementsByName("startDate")[0].value;
//    const eDate = document.getElementsByName("endDate")[0].value;
//    const sDateObj = new Date(sDate);
//    const eDateObj = new Date(eDate);
//    const todayDateObj = new Date();
//    todayDateObj.setHours(0, 0, 0, 0);

//    if (sDateObj > eDateObj) {
//     Swal.fire({
//             icon: "error",
//             title: "Invalid Date",
//             text: "End date should be after the start date.",
//           });
//     //  document.getElementById("error-end-date").innerHTML ="End date should be after the start date";
//      return false;
//    }

//   //  if (sDateObj <= todayDateObj) {
//   //     Swal.fire({
//   //       icon : "error"
//   //     })

//   //   //  document.getElementById("error-start-date").innerHTML ="Starting date should be greater than or equal to today's date";
//   //    return false;
//   //  }

//    let name = document.getElementsByName("couponName")[0].value;
//    const nameRegex = /^[A-Za-z0-9]{1,50}$/;

//    if (!nameRegex.test(name)) {
//       Swal.fire({
//         icon : "error",
//         title : "Coupon Name Error",
//         text : "Coupon name should only contain alphabets and numbers"
//       })

//     //  document.getElementById("error-coupon-name").innerHTML =
//     //    "Coupon Name error";
//      return false;
//    }

//    const offerPriceInput = document.getElementsByName("offerPrice")[0];
//    const minimumPriceInput = document.getElementsByName("minimumPrice")[0];

//    const offerPrice = offerPriceInput.value.trim() !== ""? parseInt(offerPriceInput.value): NaN;
//    const minimumPrice = minimumPriceInput.value.trim() !== ""? parseInt(minimumPriceInput.value): NaN;

//    if (isNaN(offerPrice) || isNaN(minimumPrice) || offerPrice >= minimumPrice) {
//       Swal.fire({
//         icon : "error",
//         title : "Price Error",
//         text : "Offer price must be greater than Minimum price"
//       })

//     //  document.getElementById("error-offer-price").innerHTML = "Offer Price must be greater than Minimum Price";
//      return false;
//    }

//    if (isNaN(offerPrice) || isNaN(minimumPrice)) {
//     Swal.fire({
//       icon : "error",
//       title : "Price Validation Error",
//       text : "Please enter numeric values for Offer Price and Minimum Price"
//     })
//     //  document.getElementById("error-offer-price").innerHTML ="Please enter numeric values for Offer Price and Minimum Price";
//      return false;
//    }

//        const formData = {
//        couponName: name,
//        startDate: sDateObj,
//        endDate: eDateObj,
//        offerPrice: offerPrice,
//        minimumPrice: minimumPrice
//    };
//    return true;
//  }


function setDefaultStartDate(){

   const today = new Date();
   const year = today.getFullYear();
   let month = (today.getMonth()+1).toString().padStart(2,"0");
   let day = today.getDate().toString().padStart(2,"0");
   document.getElementById("startingDate").value = `${year}-${month}-${day}`;
   document.getElementById("startingDate").min = `${year}-${month}-${day}`;


}




function confirmDelete(couponId) {
   Swal.fire({
     title: "Are you sure?",
     text: "You won't be able to revert this!",
     icon: "warning",
     showCancelButton: true,
     confirmButtonColor: "#d33",
     cancelButtonColor: "#3085d6",
     confirmButtonText: "Yes, delete it!",
   }).then((result) => {
     if (result.isConfirmed) {
       deleteCoupon(couponId);
     }
   });
 }

 function deleteCoupon(couponId) {
   $.ajax({
     url: `/admin/deleteCoupon?id=${couponId}`,
     method: "GET",
     success: function () {
       Swal.fire({
         icon: "success",
         title: "Deleted!",
         text: "The coupon has been deleted.",
         confirmButtonText: "OK",
       }).then(() => {
         window.location.reload();
       });
     },
     error: function () {
       Swal.fire({
         icon: "error",
         title: "Error!",
         text: "Failed to delete the coupon. Please try again.",
       });
     },
   });
 }
</script>
<%- include("../../views/partials/admin/footer") %>

